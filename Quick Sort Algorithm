class MiddlePivot{

static public int  partition(int arr[], int low, int high){

	int pivot = arr[(high+low)/2];

	while(low<=high){

	while(arr[low]< pivot){

		low++;
	}
	
	while(arr[high]>pivot){
		
		high--;
	}

	if(low<=high){
	
	 int temp = arr[low];

	arr[low] = arr[high];

	arr[high]= temp;

	low++;
	high--;
	}

  }// haupt while close

 return low;
}

static void quickSortRecursion(int[] arr, int low, int high){

	int pi = partition(arr, low, high);

	if(low < pi-1){
		quickSortRecursion(arr, low, pi-1);
	}

	if(pi<high){
	quickSortRecursion(arr, pi, high);
	
	}
}

static void printArray(int[] arr){

	for(int i:arr){
		System.out.print(i+" ");
	}

}
public static void main(String[] args){

int arr[] = {15,9,7,13,12,16,4,18,11};

System.out.println("Original Array");
for(int kwA: arr){
	System.out.print(kwA+" ");
}
int len = arr.length;

quickSortRecursion(arr,0, len-1);
System.out.println();
System.out.println("Sorted Array");
printArray(arr);

}
}
